x-prefect-image: &prefect-image prefecthq/prefect:2.19.7-python3.12

services:
  ### Prefect Database
  database:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: prefect
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - prefect-local

  ### MinIO for flow storage
  minio:
    image: minio/minio:latest
    entrypoint:
      [
        "minio",
        "server",
        "--address",
        "0.0.0.0:9000",
        "--console-address",
        "0.0.0.0:9001",
        "/data"
      ]
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio:/data
    ports:
      - 9000:9000
      - 9001:9001
    networks:
      - prefect-local

  ### Prefect Server API and UI
  server:
    image: *prefect-image
    restart: always
    volumes:
      - prefect:/root/.prefect
    entrypoint:
      [
        "/opt/prefect/entrypoint.sh",
        "prefect",
        "server",
        "start"
      ]
    environment:
      PREFECT_API_URL: "${BASE_URL}:4200/api"
      PREFECT_SERVER_API_HOST: 0.0.0.0
      PREFECT_API_DATABASE_CONNECTION_URL: postgresql+asyncpg://postgres:postgres@database:5432/prefect
    ports:
      - 4200:4200
    depends_on:
      - database
    networks:
      - prefect-local

  ### Prefect worker
  worker:
    image: *prefect-image
    restart: always
    entrypoint: sh -c "prefect worker start --pool docker-pool --type docker --install-policy if-not-present"
    environment:
      PREFECT_API_URL: "http://server:4200/api"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - server
    networks:
      - prefect-local

### Define named volumes for data persistence
volumes:
  prefect:
  db:
  minio:

### Define and create the 'prefect-local' network
networks:
  prefect-local:
    name: prefect-local
